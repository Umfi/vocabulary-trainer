{"version":3,"file":"js/961-legacy.f1fb3966.js","mappings":"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","sources":["webpack://vocabulary-trainer/./node_modules/@capacitor/device/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class DeviceWeb extends WebPlugin {\n    async getId() {\n        return {\n            uuid: this.getUid(),\n        };\n    }\n    async getInfo() {\n        if (typeof navigator === 'undefined' || !navigator.userAgent) {\n            throw this.unavailable('Device API not available in this browser');\n        }\n        const ua = navigator.userAgent;\n        const uaFields = this.parseUa(ua);\n        return {\n            model: uaFields.model,\n            platform: 'web',\n            operatingSystem: uaFields.operatingSystem,\n            osVersion: uaFields.osVersion,\n            manufacturer: navigator.vendor,\n            isVirtual: false,\n            webViewVersion: uaFields.browserVersion,\n        };\n    }\n    async getBatteryInfo() {\n        if (typeof navigator === 'undefined' || !navigator.getBattery) {\n            throw this.unavailable('Device API not available in this browser');\n        }\n        let battery = {};\n        try {\n            battery = await navigator.getBattery();\n        }\n        catch (e) {\n            // Let it fail, we don't care\n        }\n        return {\n            batteryLevel: battery.level,\n            isCharging: battery.charging,\n        };\n    }\n    async getLanguageCode() {\n        return {\n            value: navigator.language.split('-')[0].toLowerCase(),\n        };\n    }\n    async getLanguageTag() {\n        return {\n            value: navigator.language,\n        };\n    }\n    parseUa(ua) {\n        const uaFields = {};\n        const start = ua.indexOf('(') + 1;\n        let end = ua.indexOf(') AppleWebKit');\n        if (ua.indexOf(') Gecko') !== -1) {\n            end = ua.indexOf(') Gecko');\n        }\n        const fields = ua.substring(start, end);\n        if (ua.indexOf('Android') !== -1) {\n            const tmpFields = fields.replace('; wv', '').split('; ').pop();\n            if (tmpFields) {\n                uaFields.model = tmpFields.split(' Build')[0];\n            }\n            uaFields.osVersion = fields.split('; ')[1];\n        }\n        else {\n            uaFields.model = fields.split('; ')[0];\n            if (typeof navigator !== 'undefined' && navigator.oscpu) {\n                uaFields.osVersion = navigator.oscpu;\n            }\n            else {\n                if (ua.indexOf('Windows') !== -1) {\n                    uaFields.osVersion = fields;\n                }\n                else {\n                    const tmpFields = fields.split('; ').pop();\n                    if (tmpFields) {\n                        const lastParts = tmpFields\n                            .replace(' like Mac OS X', '')\n                            .split(' ');\n                        uaFields.osVersion = lastParts[lastParts.length - 1].replace(/_/g, '.');\n                    }\n                }\n            }\n        }\n        if (/android/i.test(ua)) {\n            uaFields.operatingSystem = 'android';\n        }\n        else if (/iPad|iPhone|iPod/.test(ua) && !window.MSStream) {\n            uaFields.operatingSystem = 'ios';\n        }\n        else if (/Win/.test(ua)) {\n            uaFields.operatingSystem = 'windows';\n        }\n        else if (/Mac/i.test(ua)) {\n            uaFields.operatingSystem = 'mac';\n        }\n        else {\n            uaFields.operatingSystem = 'unknown';\n        }\n        // Check for browsers based on non-standard javascript apis, only not user agent\n        const isFirefox = !!window.InstallTrigger;\n        const isSafari = !!window.ApplePaySession;\n        const isChrome = !!window.chrome;\n        const isEdge = /Edg/.test(ua);\n        const isFirefoxIOS = /FxiOS/.test(ua);\n        const isChromeIOS = /CriOS/.test(ua);\n        const isEdgeIOS = /EdgiOS/.test(ua);\n        // FF and Edge User Agents both end with \"/MAJOR.MINOR\"\n        if (isSafari ||\n            (isChrome && !isEdge) ||\n            isFirefoxIOS ||\n            isChromeIOS ||\n            isEdgeIOS) {\n            // Safari version comes as     \"... Version/MAJOR.MINOR ...\"\n            // Chrome version comes as     \"... Chrome/MAJOR.MINOR ...\"\n            // FirefoxIOS version comes as \"... FxiOS/MAJOR.MINOR ...\"\n            // ChromeIOS version comes as  \"... CriOS/MAJOR.MINOR ...\"\n            let searchWord;\n            if (isFirefoxIOS) {\n                searchWord = 'FxiOS';\n            }\n            else if (isChromeIOS) {\n                searchWord = 'CriOS';\n            }\n            else if (isEdgeIOS) {\n                searchWord = 'EdgiOS';\n            }\n            else if (isSafari) {\n                searchWord = 'Version';\n            }\n            else {\n                searchWord = 'Chrome';\n            }\n            const words = ua.split(' ');\n            for (const word of words) {\n                if (word.includes(searchWord)) {\n                    const version = word.split('/')[1];\n                    uaFields.browserVersion = version;\n                }\n            }\n        }\n        else if (isFirefox || isEdge) {\n            const reverseUA = ua.split('').reverse().join('');\n            const reverseVersion = reverseUA.split('/')[0];\n            const version = reverseVersion.split('').reverse().join('');\n            uaFields.browserVersion = version;\n        }\n        return uaFields;\n    }\n    getUid() {\n        if (typeof window !== 'undefined' && window.localStorage) {\n            let uid = window.localStorage.getItem('_capuid');\n            if (uid) {\n                return uid;\n            }\n            uid = this.uuid4();\n            window.localStorage.setItem('_capuid', uid);\n            return uid;\n        }\n        return this.uuid4();\n    }\n    uuid4() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["DeviceWeb","async","uuid","this","getUid","navigator","userAgent","unavailable","ua","uaFields","parseUa","model","platform","operatingSystem","osVersion","manufacturer","vendor","isVirtual","webViewVersion","browserVersion","getBattery","battery","e","batteryLevel","level","isCharging","charging","value","language","split","toLowerCase","start","indexOf","end","fields","substring","tmpFields","replace","pop","oscpu","lastParts","length","test","window","MSStream","isFirefox","InstallTrigger","isSafari","ApplePaySession","isChrome","chrome","isEdge","isFirefoxIOS","isChromeIOS","isEdgeIOS","searchWord","words","word","includes","version","reverseUA","reverse","join","reverseVersion","localStorage","uid","getItem","uuid4","setItem","c","r","Math","random","v","toString"],"sourceRoot":""}